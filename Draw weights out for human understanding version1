import matplotlib.pyplot as plt
import numpy as np
import heapq

x=0
y=0
sigmoid = x/(1+y)
pic = plt.figure(figsize=(16,10))
plt.xlim([0,40])
plt.ylim([0,12])
a = [1,2,3,4,5]
b = []
c = []
for i in range(len(a)):
    b.append([a[i],1])
    c.append([a[i],3])
e = 0
f = ["r","b","pink","k","g","r","b","pink","k","g","r","b","pink","k","g"
     ,"r","b","pink","k","g","r","b","pink","k","g","r","b","pink","k","g"
     ,"r","b","pink","k","g","r","b","pink","k","g","r","b","pink","k","g"]


g = [[2.5430112,-1.4061031,-0.6066879,-0.5681712,-1.0266174,1.0434555
    ,0.69969046,-1.042282,-0.3721126,0.77611077,-0.0538748,1.1732179
    ,-0.1689062,0.41686592,-1.6380079,-1.5892159,1.9378352,-0.288549
    ,-0.85031694,0.7676402,0.2833125,-1.1283671,-0.8526565,-0.02860703
    ,-0.7610217,-0.21601333,-0.17152317,1.9426364,0.7819554,-1.636888
    ,0.10078101,2.5115225,0.24574605,-0.48952433,0.65874034,-0.41971937],
    [0.2659828,1.0432699,-0.3280161,1.0778421,-0.61135143,1.120923
    ,-0.0846796,1.5619954,0.510981,1.6918225,-1.1725188,0.3589975
    ,0.34929514,-1.7141573,-0.04460876,1.8229964,-0.4844115,-0.9625133
    ,1.477154,0.43127474,-1.0615716,1.1306876,0.6237195,-0.48865613
    ,1.6340079,0.32985163,0.15130901,0.27667195,-0.6381518,-0.44200945
    ,-0.73043495,-0.48377508,0.4301119,-0.5303731,-0.23325929,0.04963728],
    [-1.5455118,-0.77359694,-0.16478434,-0.17345552,-0.20874497,-1.3595155
    ,-0.12191139,-0.42700025,0.43158376,-1.827878,0.43906042,0.19379511
    ,1.1505041,0.5147198,-0.40859944,-1.1480547,-2.0860136,1.9037889
    ,-1.00472,0.6820813,-1.8803723,1.3496014,1.3979563,1.098772
    ,-0.18840882,-0.41133595,1.5512354,-1.1913044,-0.2580334,0.03562495
    ,-0.23368806,1.0769845,0.5793289,-0.31243932,0.11895824,0.9383222,],
    [0.29524463,1.3751627,-0.08207699,-0.49485752,-1.6752108,0.91061944
    ,-0.65750223,-1.8591648,2.027163,-1.4056457,-0.07518975,-0.8121527
    ,-0.05461035,0.6282332,1.8020447,-0.83414954,-1.6595556,-1.1832964
    ,-1.6665852,0.49889517,2.399254,-0.25324667,-1.76154,-1.1044956
    ,-0.77872854,-1.087114,-0.8397705,-1.3799291,-1.1886848,1.1943319
    ,-0.45993063,-1.6146603,-0.08298534,-3.0236237,1.1536837,0.09141919],
    [-1.2046891,-1.0938704,0.51442575,0.5596912,0.18190725,0.9730925
    ,-0.14178868,0.23266004,0.40109864,-0.8471703,0.34365204,-0.71422
    ,-0.9198308,-0.2012488,0.1650481,0.471949,-0.9756884,1.3291153
    ,0.90032756,-0.06837036,-1.6738592,-1.1676775,-0.28631803,0.7199782
    ,1.7452575,0.08214847,-0.01464,-0.5713932,1.8452728,0.97928184
    ,-0.6574352,-0.03957328,-0.03902561,2.9592204,-0.38669527,1.4310243,],
    [-0.01963437,0.11499462,-1.4285253,-1.1762725,0.12047048,0.41530523
    ,0.39767787,-1.1759918,0.10144118,1.073042,0.20409095,-0.8274486
    ,-0.27815682,0.5286249,-0.54924846,0.48717082,0.7910548,-0.45382434
    ,1.0210414,0.6115085,0.57940465,0.6943345,-0.76680756,-0.1598016
    ,-0.6083147,-0.04427497,-0.18392308,-0.50584275,-1.4162735,-1.4833524
    ,0.6120619,0.33680528,-0.30039042,-1.2932917,0.5787632,0.37508827],
    [0.36398393,-1.0623583,0.95547575,-0.41725773,0.26909643,-1.2228386
    ,0.2529688,2.4257417,0.68730557,0.32863447,0.48669583,1.096552
    ,-0.02028302,0.15025595,-1.5021992,2.104728,-0.5503711,1.2018775
    ,-1.0864414,-0.4082754,0.6081559,0.5729866,-0.11395258,-0.54070175
    ,0.9000795,-1.0673112,-0.48888597,2.254833,-0.7153999,-0.15072577
    ,0.8876201,-2.7515984,-1.1170255,2.1151538,-0.8278565,-0.4927015,],
    [-0.8582584,1.9349762,1.2477998,1.0341014,2.907132,-0.7298459
    ,0.20885743,0.07009004,-0.05970012,-0.26544404,0.15545888,-0.49779555
    ,-0.9509711,0.6856646,1.3748149,-0.55811596,1.1479895,-0.8909183
    ,1.1238692,-2.4316163,0.8287786,-2.1160247,0.809213,0.13496664
    ,-0.9626645,1.5229019,0.62527364,-0.64702535,0.41850615,1.1053251
    ,0.6837988,1.3736027,0.92975646,0.6436584,-1.4893178,-0.7093028,],
    [0.11114751,-0.14896181,-0.14576617,0.12570535,-0.01009114,-1.1861852
    ,-0.57976663,0.16349773,-0.7606006,0.4377248,-0.35712743,-0.00654641
    ,0.8613219,-1.0120909,0.77552545,-0.78975403,1.8362153,-0.6612435
    ,0.03135789,-0.09406899,-0.11600772,0.9112144,0.9194817,0.35550964
    ,-1.0115111,0.88405913,-0.64682275,-0.20380288,1.1548433,0.39276537
    ,-0.22149456,-0.41663557,-0.64604723,-0.11289085,0.41916916,-1.2666327,],
    [-0.75512505,0.22582276,-0.40619117,-1.0851887,0.83813906,-0.43615833
    ,0.29396412,-0.19153681,0.41089502,0.09117673,-0.5143155,-0.10460666
    ,-0.22968203,0.17872521,0.47843054,0.23364219,-0.05111765,-0.9132651
    ,-0.3454474,-0.40744397,-0.61524796,-0.41481778,-0.7308416,-0.15779863
    ,0.16668972,-0.28558236,0.04400216,-0.30827478,-1.3677096,-0.5227073
    ,0.16818905,-1.1118821,0.06963503,-0.61558217,-0.5401691,0.3556121,],
    [0.5928117,-0.15172453,0.4838049,1.0948508,-0.68896395,0.40722725
    ,-0.24431169,0.20369399,-0.3985591,-0.07812395,0.537174,0.1525287
    ,0.19175518,-0.23323794,-0.4549688,-0.19407792,0.14593278,0.871192
    ,0.39901513,0.31186187,0.6877765,0.34381628,0.7327276,0.14221919
    ,-0.20425671,0.33153465,-0.03494496,0.31960794,1.3324207,0.5440845
    ,-0.09463736,1.1100907,0.08156608,0.59601897,0.4713559,-0.43029496],
    [0.8826547,-0.40358552,0.34721544,0.9831854,-0.60466355,0.15027998
    ,-0.40177056,0.1868858,-0.40452248,-0.11975834,0.5287,-0.09119801
    ,0.17269914,0.07310959,-0.6134916,-0.18692683,0.15943222,0.74008894
    ,0.47064883,0.17691153,0.76235837,0.66962296,0.53701836,0.15904973
    ,-0.20569152,0.2839347,-0.05262033,0.61090744,1.4591993,0.40879682
    ,0.0247872,0.829323,-0.24730583,0.70710987,0.7083382,-0.3939909]]




plt.scatter(16,10,s=100,c='r')
plt.annotate('Output', xy=(16,10), xytext=(17,11.5),
        arrowprops=dict(facecolor='black', shrink=0.05),
        )


for j in range(len(g)):
    plt.scatter(j*2+5,1,s=50)
    plt.annotate('Input'+str(j), xy=(j*2+5,1), xytext=(j*2+4,1-0.8),
            arrowprops=dict(facecolor='black', shrink=0.05),
            )
    e += 0.1
    
    for k in range(len(g[0])):
        max_weight = sorted(g[j])[len(g[j])-1]
        #plt.plot([b[j],c[k]],[1,3],c='k',lw=d[j])

        
        plt.scatter(k,5,s=50)
        plt.plot([k,16],[5,10],c=f[k],lw=g[j][k],alpha=max(g[j][k],0.001)/max_weight)
        
        #plt.plot(j,k,[1,5],c='k',lw=g[j][k])
        plt.plot([j*2+5,k],[1,5],c=f[k],lw=g[j][k],alpha=max(g[j][k],0.001)/max_weight)

        if g[j][k]>sorted(g[j])[len(g[j])-3]:  #only print the top 3 weights
            plt.text((j*2+5+k)/2,(1+5)/3+e,r'$'+str('%.2f' % (g[j][k]))+'$',color=f[k])   #,fontsize=d[k]*40
        else:
            pass
    
plt.show()


### print out the name and value of variables ###
